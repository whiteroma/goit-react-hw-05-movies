{"version":3,"file":"static/js/418.ccb05700.chunk.js","mappings":"+PAEaA,EAAaC,EAAAA,GAAAA,IAAH,oRAeVC,EAAiBD,EAAAA,GAAAA,IAAH,uKAYdE,EAAqBF,EAAAA,GAAAA,KAAH,mEAIlBG,EAAgBH,EAAAA,GAAAA,IAAH,6CAGbI,EAAiBJ,EAAAA,GAAAA,GAAH,+D,kBCtBZ,SAASK,IAAgB,IAAD,IAC/BC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,EAAO,oBAAGP,EAASQ,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAqBxC,OAnBAC,EAAAA,EAAAA,YAAU,WACHR,GAILS,MAAM,sCAAD,OACmCT,EADnC,6DAGFU,MAAK,SAAAC,GACJ,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,IAAIC,MAAM,iBACjC,IACAN,MAAK,SAAAP,GACJC,EAAS,CAACD,GACX,GACJ,GAAE,CAACH,KAGF,gCACGG,IACC,SAAC,KAAD,UACGA,EAAMc,KACL,YASO,IARLC,EAQI,EARJA,aACAC,EAOI,EAPJA,YACAC,EAMI,EANJA,MACAC,EAKI,EALJA,KACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,OACAC,EACI,EADJA,GAEMC,EAAc,IAAIC,KAAKT,GAAcU,cAC3CC,QAAQC,IAAI,cAAeJ,GAC3B,IAAMK,EAAQP,EACXP,KAAI,YACH,OADiB,EAAXI,IAEP,IACAW,KAAK,KACRH,QAAQC,IAAI,QAASC,GACrB,IAAME,EAAYC,KAAKC,MAAqB,GAAfZ,GAAqB,IAClD,OACE,4BACE,SAAC,KAAD,CAAMa,GAAI/B,EAAV,UACE,SAAC,MAAD,CAAuBgC,KAAK,OAAOC,MAAM,iBAE3C,UAAC/C,EAAD,YACE,gBACEgD,IACEpB,EAAW,uDACyCA,GAChD,iFAENqB,IAAG,OAAEpB,QAAF,IAAEA,EAAAA,EAASC,KAEhB,UAAC5B,EAAD,YACE,iCACG4B,QADH,IACGA,EAAAA,EAAQD,EADX,KACoBM,EADpB,QAGA,uCACc,KACZ,SAAChC,EAAD,UAAqBuC,QAEvB,sCACA,uBAAIX,KACJ,oCACA,uBAAIS,WAGR,UAACpC,EAAD,YACE,oDACA,UAACC,EAAD,YACE,yBACE,SAAC,KAAD,CAAYU,MAAO,CAAEC,KAAMF,GAAW+B,GAAG,OAAzC,qBAIF,yBACE,SAAC,KAAD,CAAY9B,MAAO,CAAEC,KAAMF,GAAW+B,GAAG,UAAzC,+BApCEX,EA4Cb,OAIR,SAAC,EAAAgB,SAAD,WAAU,SAAC,KAAD,QAGd,C","sources":["components/moviedetails/MovieDetails.styled.jsx","components/moviedetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const AboutMovie = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 20px;\n\n  & > img {\n    max-height: 100%;\n    max-width: 100%;\n    border-radius: 10px;\n    box-shadow: 0px 0px 4px 2px orangered;\n    align-self: flex-start;\n    margin-right: 20px;\n  }\n`;\n\nexport const AboutMovieText = styled.div`\n  & > p {\n    margin-bottom: 25px;\n    margin-top: 5px;\n\n    :last-child {\n      color: orangered;\n      font-weight: bold;\n    }\n  }\n`;\n\nexport const AboutMovieTextSpan = styled.span`\n  color: orangered;\n  font-weight: bold;\n`;\nexport const AdditionalDiv = styled.div`\n  margin-top: 30px;\n`;\nexport const AdditionalList = styled.ul`\n  margin-top: 25px;\n  display: flex;\n`;\n","import { useState } from 'react';\nimport { useEffect, Suspense } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { StyledLink } from 'components/Layout/Layout.styled';\nimport {\n  AboutMovie,\n  AboutMovieText,\n  AboutMovieTextSpan,\n  AdditionalList,\n  AdditionalDiv,\n} from './MovieDetails.styled';\nimport { Container } from 'components/Layout/Layout.styled';\nimport { BsArrowLeftSquareFill } from 'react-icons/bs';\n\nexport default function MovieDetails() {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const getBack = location.state?.from ?? '/';\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=bfc78256055c27ed6be30c1c43cfe9c3&language=en-US`\n    )\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(new Error('Nothing found'));\n      })\n      .then(movie => {\n        setMovie([movie]);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && (\n        <Container>\n          {movie.map(\n            ({\n              release_date,\n              poster_path,\n              title,\n              name,\n              overview,\n              vote_average,\n              genres,\n              id,\n            }) => {\n              const releaseYear = new Date(release_date).getFullYear();\n              console.log('releaseYear', releaseYear);\n              const genre = genres\n                .map(({ name }) => {\n                  return name;\n                })\n                .join(' ');\n              console.log('genre', genre);\n              const userScore = Math.round(vote_average * 10) + '%';\n              return (\n                <div key={id}>\n                  <Link to={getBack}>\n                    <BsArrowLeftSquareFill size=\"40px\" color=\"orangered\" />\n                  </Link>\n                  <AboutMovie>\n                    <img\n                      src={\n                        poster_path\n                          ? `https://image.tmdb.org/t/p/w220_and_h330_face${poster_path}`\n                          : 'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie-1-3.jpg'\n                      }\n                      alt={title ?? name}\n                    ></img>\n                    <AboutMovieText>\n                      <h2>\n                        {name ?? title} ({releaseYear})\n                      </h2>\n                      <p>\n                        User score:{' '}\n                        <AboutMovieTextSpan>{userScore}</AboutMovieTextSpan>\n                      </p>\n                      <h3>Overview</h3>\n                      <p>{overview}</p>\n                      <h3>Genres</h3>\n                      <p>{genre}</p>\n                    </AboutMovieText>\n                  </AboutMovie>\n                  <AdditionalDiv>\n                    <h3>Additional information</h3>\n                    <AdditionalList>\n                      <li>\n                        <StyledLink state={{ from: getBack }} to=\"cast\">\n                          Cast\n                        </StyledLink>\n                      </li>\n                      <li>\n                        <StyledLink state={{ from: getBack }} to=\"reviews\">\n                          Reviews\n                        </StyledLink>\n                      </li>\n                    </AdditionalList>\n                  </AdditionalDiv>\n                </div>\n              );\n            }\n          )}\n        </Container>\n      )}\n     <Suspense><Outlet /></Suspense>\n    </>\n  );\n}\n"],"names":["AboutMovie","styled","AboutMovieText","AboutMovieTextSpan","AdditionalDiv","AdditionalList","MovieDetails","location","useLocation","movieId","useParams","useState","movie","setMovie","getBack","state","from","useEffect","fetch","then","res","ok","json","Promise","reject","Error","map","release_date","poster_path","title","name","overview","vote_average","genres","id","releaseYear","Date","getFullYear","console","log","genre","join","userScore","Math","round","to","size","color","src","alt","Suspense"],"sourceRoot":""}