{"version":3,"file":"static/js/519.1fc48e36.chunk.js","mappings":"0OAEaA,EAAWC,EAAAA,GAAAA,GAAH,yNAWRC,EAAWD,EAAAA,GAAAA,GAAH,+jBAgCRE,EAAWF,EAAAA,GAAAA,KAAH,mE,SCzCN,SAASG,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACHL,GAILM,MAAM,sCAAD,OACmCN,EADnC,qEAGFO,MAAK,SAAAC,GACJ,OAAIA,EAAIC,GACCD,EAAIE,OAEN,IAAIC,QAAQC,OAAO,IAAIC,MAAM,iBACrC,IACAN,MAAK,SAAAO,GAAM,OAAIV,EAAQU,EAAOX,KAAnB,GACf,GAAE,CAACH,IACJe,QAAQC,IAAIb,IAGV,SAACR,EAAD,UACGQ,EAAKc,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UACnC,OACE,UAACxB,EAAD,YACE,gBACEyB,IACEF,EAAY,uDACwCA,GAChD,gHAENG,IAAKJ,KAEP,4BACE,wBAAKA,KACL,wCACa,SAACrB,EAAD,UAAWuB,YAZbH,EAiBlB,KAGN,C","sources":["components/cast/Cast.styled.jsx","components/cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  flex-grow: 1;\n  list-style: none;\n  justify-content: space-between;\n  padding: 15px;\n  margin-left: -10px;\n  transition: transform 3s ease-in-out;\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  margin-left: 10px;\n  margin-top: 20px;\n  justify-content: space-between;\n  flex-basis: calc((100% - 60px) / 4);\n  border-bottom: 1px solid orangered;\n  cursor: pointer;\n  :hover {\n    transform: scale(1.05);\n    color: orangered;\n  }\n\n  & > img {\n    max-height: 100%;\n    max-width: 100%;\n    border-radius: 10px;\n    box-shadow: 0px 0px 4px 2px orangered;\n  }\n\n  & > h4 {\n    padding: 15px;\n    margin: 0 auto;\n  }\n\n  & > div {\n    padding: 10px;\n    text-align: center;\n  }\n`;\n\nexport const CastSpan = styled.span`\n  color: orangered;\n  font-weight: bold;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { CastList, CastItem, CastSpan } from './Cast.styled';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=bfc78256055c27ed6be30c1c43cfe9c3&language=en-US`\n    )\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n        return new Promise.reject(new Error('Nothing found'));\n      })\n      .then(credit => setCast(credit.cast));\n  }, [movieId]);\n  console.log(cast);\n\n  return (\n    <CastList>\n      {cast.map(({ id, name, profile_path, character }) => {\n        return (\n          <CastItem key={id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w220_and_h330_face${profile_path}`\n                  : 'https://hollywoodlife.com/wp-content/uploads/2016/05/actor-on-a-red-carpet-reddit-ftr1.jpg?w=600&h=432&crop=1'\n              }\n              alt={name}\n            ></img>\n            <div>\n              <h3>{name}</h3>\n              <p>\n                Character: <CastSpan>{character}</CastSpan>\n              </p>\n            </div>\n          </CastItem>\n        );\n      })}\n    </CastList>\n  );\n}\n"],"names":["CastList","styled","CastItem","CastSpan","Cast","movieId","useParams","useState","cast","setCast","useEffect","fetch","then","res","ok","json","Promise","reject","Error","credit","console","log","map","id","name","profile_path","character","src","alt"],"sourceRoot":""}