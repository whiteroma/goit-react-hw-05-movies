{"version":3,"file":"static/js/731.bb4edde7.chunk.js","mappings":"gSAGaA,EAAYC,EAAAA,GAAAA,IAAH,g1BA6CTC,EAAQD,EAAAA,GAAAA,MAAH,mYAwBLE,EAAYF,EAAAA,GAAAA,MAAH,yWAaTG,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,kW,SC9ER,SAASK,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,IAAgB,IAA1C,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAGMC,EAAcL,EAAMM,IAAI,SAC9B,GAIIC,EAAAA,EAAAA,IAAQ,CACVC,cAAe,CACbC,YAAaJ,KALfK,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAuCf,OAjCAE,QAAQC,IAAI,QAASf,GACrBc,QAAQC,IAAI,cAAeV,IAE3BW,EAAAA,EAAAA,YAAU,WACHX,GAILY,MAAM,iHAAD,OACqGZ,EADrG,gCAEFa,MAAK,SAAAC,GACJ,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,IAAIC,MAAM,4BACjC,IACAN,MAAK,SAAAO,GAEJ,OADAX,QAAQC,IAAIU,GACU,IAAlBA,EAAMC,QACDC,EAAAA,GAAAA,MACL,wDAGGvB,GAAU,OAAIqB,EAAMC,SAC5B,IACAE,OAAM,SAAAC,GACL,OAAOF,EAAAA,GAAAA,MAAYE,EAAMC,QAC1B,GACJ,GAAE,CAACzB,IACJS,QAAQC,IAAIZ,IAKV,UAACb,EAAD,YACE,kBAAMyC,SAAUpB,GA/CH,SAAAqB,GAAI,OACnB/B,EAAkB,KAAT+B,EAAc,CAAEhC,MAAOgC,EAAKvB,aAAgB,GADlC,IA+CjB,WACE,SAACjB,GAAD,QACEyC,KAAK,eACDvB,EAAS,cAAe,CAAEwB,UAAU,MAEzCtB,EAAOH,cAAe,iDAEvB,SAAChB,EAAD,CAAW0C,KAAK,SAASC,MAAM,eAEjC,wBACGjC,EAAOkC,KACN,YAAqE,IAAlEC,EAAiE,EAAjEA,YAAaC,EAAoD,EAApDA,GAAIC,EAAgD,EAAhDA,MAAOP,EAAyC,EAAzCA,KAAMQ,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,eACvCC,EAAO,IAAIC,KAAKH,GAAcI,cAC9BC,EAAQ,IAAIF,KAAKF,GAAgBG,cACvC,OACE,yBACE,UAACnD,EAAD,CAAYqD,GAAE,UAAKR,GAAMS,MAAO,CAAEC,KAAMpD,GAAxC,WACE,gBACEqD,IACEZ,EAAW,uDACyCA,GAChD,iFAENa,IAAG,OAAEX,QAAF,IAAEA,EAAAA,EAASP,KAEhB,iCACGA,QADH,IACGA,EAAAA,EAAQO,EADX,KACoBG,GAAQG,EAD5B,WAVKP,EAgBZ,OAGL,SAAC,KAAD,MAGL,C","sources":["Pages/movies/Movies.styled.jsx","Pages/movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 0 16px;\n\n  & > ul {\n    display: flex;\n    flex-wrap: wrap;\n    list-style: none;\n    margin-left: -15px;\n\n    & > li {\n      display: flex;\n      flex-direction: column;\n      margin-left: 15px;\n      margin-top: 15px;\n      justify-content: flex-start;\n      flex-basis: calc((100% - 60px) / 4);\n      border-bottom: 1px solid orangered;\n      transition: transform 3s ease-in-out;\n      :hover {\n        color: orangered;\n      }\n\n      :nth-last-child(-n + 4) {\n        margin-bottom: 20px;\n      }\n    }\n  }\n\n  & > form {\n    display: flex;\n    align-items: center;\n\n    & > span {\n      font-weight: bold;\n      color: red;\n    }\n  }\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  height: 20px;\n  font-size: 15px;\n  margin-right: 3px;\n  border-radius: 4px;\n\n  &:focus-within {\n    outline-color: orangered !important;\n  }\n\n  &:focus-visible {\n    outline-color: orangered !important;\n  }\n\n  &:focus {\n    outline-color: orangered !important;\n  }\n\n  &:active {\n    outline-color: orangered !important;\n  }\n`;\n\nexport const SearchBtn = styled.input`\n  padding: 4px 8px;\n  background-color: orangered;\n  color: white;\n  border-radius: 4px;\n  border-color: orangered;\n  margin-left: 5px;\n  font-weight: bold;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n`;\n\nexport const MoviesLink = styled(Link)`\n  text-align: center;\n  text-decoration: none;\n  color: black;\n  :hover {\n    color: orangered;\n    transform: scale(1.05);\n  }\n\n  & > img {\n    max-width: 100%;\n    max-height: auto;\n    border-radius: 10px;\n    box-shadow: 0px 0px 4px 2px orangered;\n  }\n\n  & > h4 {\n    padding: 15px;\n    margin: 0 auto;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Outlet, useSearchParams, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Container, MoviesLink, Input, SearchBtn } from './Movies.styled';\n\nexport default function Movies() {\n  const location = useLocation();\n  const [query, setQuery] = useSearchParams('');\n  const [movies, setMovies] = useState([]);\n  const onSubmit = data =>\n    setQuery(data !== '' ? { query: data.SearchQuery } : '');\n  const searchQuery = query.get('query');\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      SearchQuery: searchQuery,\n    },\n  });\n  console.log('query', query);\n  console.log('searchQuery', searchQuery);\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    fetch(`\n    https://api.themoviedb.org/3/search/movie?api_key=bfc78256055c27ed6be30c1c43cfe9c3&language=en-US&query=${searchQuery}&page=1&include_adult=false`)\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(new Error('Change your search query'));\n      })\n      .then(movie => {\n        console.log(movie);\n        if (movie.results === 0) {\n          return toast.error(\n            'Something went wrong. Try changing your search query'\n          );\n        }\n        return setMovies([...movie.results]);\n      })\n      .catch(error => {\n        return toast.error(error.message);\n      });\n  }, [searchQuery]);\n  console.log(movies);\n\n  //   const notify = () => toast.error(\"Please enter your search query\");\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          name=\"SearchQuery\"\n          {...register('SearchQuery', { required: true })}\n        />\n        {errors.SearchQuery && <span>Field is required</span>}\n\n        <SearchBtn type=\"submit\" value=\"Search\" />\n      </form>\n      <ul>\n        {movies.map(\n          ({ poster_path, id, title, name, release_date, first_air_date }) => {\n            const date = new Date(release_date).getFullYear();\n            const date2 = new Date(first_air_date).getFullYear();\n            return (\n              <li key={id}>\n                <MoviesLink to={`${id}`} state={{ from: location }}>\n                  <img\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w220_and_h330_face${poster_path}`\n                        : 'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie-1-3.jpg'\n                    }\n                    alt={title ?? name}\n                  ></img>\n                  <h4>\n                    {name ?? title} ({date || date2})\n                  </h4>\n                </MoviesLink>\n              </li>\n            );\n          }\n        )}\n      </ul>\n      <Outlet />\n    </Container>\n  );\n}\n"],"names":["Container","styled","Input","SearchBtn","MoviesLink","Link","Movies","location","useLocation","useSearchParams","query","setQuery","useState","movies","setMovies","searchQuery","get","useForm","defaultValues","SearchQuery","register","handleSubmit","errors","formState","console","log","useEffect","fetch","then","res","ok","json","Promise","reject","Error","movie","results","toast","catch","error","message","onSubmit","data","name","required","type","value","map","poster_path","id","title","release_date","first_air_date","date","Date","getFullYear","date2","to","state","from","src","alt"],"sourceRoot":""}